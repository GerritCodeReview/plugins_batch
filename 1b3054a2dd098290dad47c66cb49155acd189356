{
  "comments": [
    {
      "key": {
        "uuid": "f9dcf0a1_ac96e39f",
        "filename": "WORKSPACE",
        "patchSetId": 3
      },
      "lineNbr": 6,
      "author": {
        "id": 1012732
      },
      "writtenOn": "2019-02-01T15:26:02Z",
      "side": 1,
      "message": "Fine if willing to stick to 2.16 straight for the bazel build, beside that other decision to make about the maven one (potentially going from 2.15.7 to 2.16.4 per se). Before this change, this plugin was already sticking to a major version (2.15 straight) for its bazel build.",
      "range": {
        "startLine": 6,
        "startChar": 14,
        "endLine": 6,
        "endChar": 54
      },
      "revId": "1b3054a2dd098290dad47c66cb49155acd189356",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "44fc00da_5dd00753",
        "filename": "pom.xml",
        "patchSetId": 3
      },
      "lineNbr": 25,
      "author": {
        "id": 1012732
      },
      "writtenOn": "2019-02-01T15:26:02Z",
      "side": 1,
      "message": "2.16.4, rather? -Since the version used before this change was 2.15.7, a specifically minor one.",
      "range": {
        "startLine": 25,
        "startChar": 11,
        "endLine": 25,
        "endChar": 15
      },
      "revId": "1b3054a2dd098290dad47c66cb49155acd189356",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c4a1c41a_32c62b2f",
        "filename": "pom.xml",
        "patchSetId": 3
      },
      "lineNbr": 25,
      "author": {
        "id": 1010013
      },
      "writtenOn": "2019-02-01T19:21:44Z",
      "side": 1,
      "message": "I suspect the previous \"minor\" revision was because it did not work with the prior stable releases. I would generally constrain things as little as possible, so if this works with 2.16 then we should leave it at that.",
      "parentUuid": "44fc00da_5dd00753",
      "range": {
        "startLine": 25,
        "startChar": 11,
        "endLine": 25,
        "endChar": 15
      },
      "revId": "1b3054a2dd098290dad47c66cb49155acd189356",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f56134dd_1c1d4bab",
        "filename": "pom.xml",
        "patchSetId": 3
      },
      "lineNbr": 25,
      "author": {
        "id": 1011123
      },
      "writtenOn": "2019-02-02T06:09:59Z",
      "side": 1,
      "message": "I used 2.16 because that\u0027s what was available at the time.",
      "parentUuid": "c4a1c41a_32c62b2f",
      "range": {
        "startLine": 25,
        "startChar": 11,
        "endLine": 25,
        "endChar": 15
      },
      "revId": "1b3054a2dd098290dad47c66cb49155acd189356",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7451fd32_b7518786",
        "filename": "src/main/java/com/google/gerrit/server/util/RefUpdater.java",
        "patchSetId": 3
      },
      "lineNbr": 198,
      "author": {
        "id": 1010013
      },
      "writtenOn": "2019-02-01T19:21:44Z",
      "side": 1,
      "message": "When is this false? I don\u0027t think skipping the event firing is the right thing to do?",
      "range": {
        "startLine": 198,
        "startChar": 25,
        "endLine": 198,
        "endChar": 34
      },
      "revId": "1b3054a2dd098290dad47c66cb49155acd189356",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3d165f3c_1cc778f6",
        "filename": "src/main/java/com/google/gerrit/server/util/RefUpdater.java",
        "patchSetId": 3
      },
      "lineNbr": 198,
      "author": {
        "id": 1011123
      },
      "writtenOn": "2019-02-02T06:09:59Z",
      "side": 1,
      "message": "It will be false if the account was not in the cache.  In that case, calling get() on accountState will result in an exception from Optional.\n\nNote that in the previous gerrit version, the account cache would return null if the account was not present. The previous implementation did not include a null-check and would have crashed with NPE in this case.",
      "parentUuid": "7451fd32_b7518786",
      "range": {
        "startLine": 198,
        "startChar": 25,
        "endLine": 198,
        "endChar": 34
      },
      "revId": "1b3054a2dd098290dad47c66cb49155acd189356",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "62186874_7c58b17a",
        "filename": "src/main/java/com/google/gerrit/server/util/RefUpdater.java",
        "patchSetId": 3
      },
      "lineNbr": 198,
      "author": {
        "id": 1010013
      },
      "writtenOn": "2019-02-04T16:02:53Z",
      "side": 1,
      "message": "I\u0027m a little confused. It seem like what you are saying is \u0027we are avoiding a crash when the account is null\", but we probably still aren\u0027t doing the right thing then? When would the account not be in the cache? What is the proper recovery for this account not being in the cache? This feels a bit like the checked versus unchecked exception case, why are we bothering to complicate the missing account logic if we don\u0027t have a good recovery path?",
      "parentUuid": "3d165f3c_1cc778f6",
      "range": {
        "startLine": 198,
        "startChar": 25,
        "endLine": 198,
        "endChar": 34
      },
      "revId": "1b3054a2dd098290dad47c66cb49155acd189356",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    }
  ]
}